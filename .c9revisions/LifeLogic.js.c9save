{"ts":1348442911589,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\nfunction contains(points, point) {\n    for(var i =0; i < points.length; i++){\n        var toCheck = points[i];\n        if (toCheck.x == point.x && toCheck.y == point.y)\n            return true;\n    }\n    return false;\n}\n\nfunction LifeLogic() {\n    var _livePoints = [{x:1,y:1}, {x:2,y:2}, {x:2,y:3}, {x:1,y:3}, {x:0,y:3}];\n    var _self = this;\n    \n    _self.getPoints = function getPoints(){\n        return _livePoints;\n    };\n    \n    _self.toggle = function toggle(point) {\n        if (_self.isAlive(point)) {\n            for (var i =0;i < _livePoints.length; i++){\n                var toCheck = _livePoints[i];\n                if (toCheck.x == point.x && toCheck.y == point.y) {\n                    _livePoints.splice(i, 1);\n                    return;\n                }\n            }\n        } else {\n            _livePoints.push(point);\n        }\n    };\n    \n    _self.advance = function advance() {\n        var newPoints = [];\n        \n        for(var t = 0; t < _livePoints.length; t++) {\n            var point = _livePoints[t];\n            for (var i = -3; i < 4; i++) {\n                for (var j = -3; j < 4; j++){\n                    if (_lives({x:point.x+i, y:point.y+j}) && \n                        !contains(newPoints, {x:point.x+i, y:point.y+j})\n                    ) {\n                        newPoints.push({x:point.x+i, y:point.y+j});\n                    }\n                }\n            }\n        }\n        \n        _livePoints = newPoints;\n        return _livePoints;\n    };\n    \n    _self.isAlive = function isAlive(point){\n        return contains(_livePoints, point);\n    };\n    \n    function _lives(point){\n        var liveNeighbors = 0;\n        \n        for (var i = -1; i < 2; i++) {\n            for (var j = -1; j < 2; j++){\n                if (i === 0 && j === 0) continue;\n                if (_self.isAlive({x:point.x+i, y:point.y+j})) {\n                    liveNeighbors++;\n                }\n            }\n        }\n        \n        if (_self.isAlive(point))\n            return liveNeighbors == 2 || liveNeighbors == 3;\n        else\n            return liveNeighbors == 3;\n    }\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":2111}]],"length":2111}
{"contributors":[],"silentsave":false,"ts":1348442941332,"patch":[[{"diffs":[[0," = ["],[1,"\n   {x:4,y:4},\n   {x:4,y:5},\n   {x:5,y:5},\n   {x:5,y:4},\n   "],[0,"{x:1"],[1,"4"],[0,",y:"],[-1,"1}, {x:2"],[1,"4},\n   {x:14,y:5},\n   {x:14,y:6},\n   {x:15,y:3},\n   {x:16,y:2},\n   {x:17"],[0,",y:2},"],[1,"\n  "],[0," {x:"],[-1,"2"],[1,"15,y:7},\n   {x:16,y:8},\n   {x:17,y:8},\n   {x:18,y:5},\n   {x:19"],[0,",y:3},"],[1,"\n  "],[0," {x:1"],[1,"9,y:7},\n   {x:20,y:6},\n   {x:20,y:5},\n   {x:20,y:4},\n   {x:21,y:5},\n   {x:24,y:4},\n   {x:25,y:4},\n   {x:25"],[0,",y:3},"],[1,"\n  "],[0," {x:"],[-1,"0,y:3}"],[1,"24,y:3},\n   {x:24,y:2},\n   {x:25,y:2},\n   {x:26,y:5},\n   {x:26,y:1},\n   {x:28,y:1},\n   {x:28,y:0},\n   {x:28,y:5},\n   {x:28,y:6},\n   {x:38,y:2},\n   {x:39,y:2},\n   {x:38,y:1},\n   {x:39,y:1},\n"],[0,"];\n "]],"start1":264,"start2":264,"length1":61,"length2":545}]],"length":2595,"saved":false}
