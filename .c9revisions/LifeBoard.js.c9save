{"ts":1348442910434,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n\nfunction LifeBoard(canvas, startingLogic) {\n    var _canvas = canvas;\n    var _$canvas = $(canvas);\n    var _ctx = _canvas.getContext('2d');\n    var _self = this;\n    \n    var _state = startingLogic || new LifeLogic();\n    \n    var _square_width = 10;\n    \n    var _liveCellColor = \"Black\";\n    var _liveCellHoverColor = \"#888\";\n    var _mouseColor = \"#00A308\";\n    \n    // Canvas Events\n    \n    _$canvas.click(function(e){\n        _self.toggle({x:e.pageX, y:e.pageY});\n    });\n    \n    var lastPoint = {};\n    var lastPointWasAlive = false;\n    _$canvas.mousemove(function(e){\n        _self.render();\n        var point = {x:e.pageX,y:e.pageY};\n        convertCoord(point);\n        _ctx.fillStyle = lastPointWasAlive ? _liveCellColor : \"#ffffff\";\n        _ctx.fillRect(lastPoint.x * _square_width, lastPoint.y * _square_width, _square_width, _square_width);\n        lastPoint = point;\n        if (!_state.isAlive(point)){\n            _ctx.fillStyle = _mouseColor;\n        } else {\n            _ctx.fillStyle = _liveCellHoverColor;\n        }\n        _ctx.fillRect(point.x * _square_width, point.y * _square_width, _square_width, _square_width);\n    });\n    \n    // End Canvas events\n    \n    _self.toggle = function toggle(point) {\n        convertCoord(point);\n        _state.toggle(point);\n        _self.render();\n    };\n    \n    function drawRule(){\n        _ctx.lineWidth = 0.25;\n        for(var i = 0; i < _canvas.width; i+=_square_width) {\n            _ctx.beginPath();\n            _ctx.moveTo(i, 0);\n            _ctx.lineTo(i, _canvas.height);\n            _ctx.stroke();\n        }\n        for(i = 0; i < _canvas.height; i+=_square_width) {\n            _ctx.beginPath();\n            _ctx.moveTo(0, i);\n            _ctx.lineTo(_canvas.width, i);\n            _ctx.stroke();\n        }\n    }\n    \n    _self.render = function render() {\n        _canvas.width = _canvas.width;\n        drawRule();\n        var points = _state.getPoints();\n        _ctx.fillStyle = _liveCellColor;\n        for(var i = 0; i < points.length; i++){\n            var point = points[i];\n            _ctx.fillRect(point.x * _square_width, point.y * _square_width, _square_width, _square_width);\n        }\n    };\n    \n    _self.advance = function advance(){\n        return _state.advance();\n    };\n    \n    function convertCoord(point){\n        point.x = Math.floor(point.x / _square_width);\n        point.y = Math.floor(point.y / _square_width);\n    }\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":2429}]],"length":2429}
{"contributors":[],"silentsave":false,"ts":1348442954324,"patch":[[{"diffs":[[0,"   var _"],[-1,""],[0,""],[1,"viewportOrigin = { x: 0, y: 0 };\n    \n    var _"],[0,"state = "]],"start1":171,"start2":171,"length1":16,"length2":63},{"diffs":[[0,"    "],[-1,"_self.toggle("],[1,"var point = "],[0,"{x:e"]],"start1":478,"start2":478,"length1":21,"length2":20},{"diffs":[[0,"e.pageY}"],[1,";\n        convertCoord(point);\n        _self.toggle(shiftPointForViewport(point)"],[0,");\n    }"]],"start1":508,"start2":508,"length1":16,"length2":96},{"diffs":[[0,"    });\n    "],[-1,""],[0,""],[1,"// drag stuff\n    var dragStart;\n    _$canvas.mousemove(function(e){\n        if (dragStart) {\n            var point = {x:e.pageX,y:e.pageY};\n            convertCoord(point);\n            var xDiff = point.x - dragStart.x;\n            var yDiff = point.y - dragStart.y;\n            _self.origin({x:_self.origin().x - xDiff, y:_self.origin().y - yDiff});\n            dragStart = point;\n        }\n    });\n    _$canvas.mousedown(function(e){\n        dragStart = {x:e.pageX,y:e.pageY};\n        convertCoord(dragStart);\n    });\n    _$canvas.mouseup(function(){\n        dragStart = undefined;\n    });\n    // end drag stuff"],[0,"\n    // End "]],"start1":1273,"start2":1273,"length1":24,"length2":638},{"diffs":[[0,") {\n"],[-1,"        convertCoord(point);\n"],[0,"    "]],"start1":1970,"start2":1970,"length1":37,"length2":8},{"diffs":[[0,"var point = "],[1,"shiftPointForViewport("],[0,"points[i];\n "]],"start1":2751,"start2":2751,"length1":24,"length2":46},{"diffs":[[0,"oints[i]"],[1,")"],[0,";\n      "]],"start1":2786,"start2":2786,"length1":16,"length2":17},{"diffs":[[0,"    "],[-1,"function convertCoord(point){"],[1,"_self.squareWidth = function squareWidth(newWidth) {\n        if (newWidth) {\n            _square_width = parseInt(newWidth, 10);\n            _self.render();\n        }\n        return _square_width;\n    };\n    \n    _self.origin = function origin(newOrigin) {\n        if (newOrigin) {\n            _viewportOrigin = newOrigin;\n            _self.render();\n        }\n        return _viewportOrigin;\n    };\n    \n    _self.getPoints = function getPoints() {\n        return _state.getPoints();\n    };\n    \n    function shiftPointForViewport(point) {\n        return { x:point.x - _viewportOrigin.x, y: point.y - _viewportOrigin.y };\n    }\n    \n    function convertCoord(point){\n        if (point.converted) return point;"],[0,"\n   "]],"start1":3011,"start2":3011,"length1":37,"length2":718},{"diffs":[[0,"are_width);\n"],[1,"        point.converted = true;\n        return point;\n"],[0,"    }\n}\n"]],"start1":3824,"start2":3824,"length1":20,"length2":74}]],"length":3898,"saved":false}
